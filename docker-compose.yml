services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: base
   
    ports:
      - "3000:3000"
    
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/powerfin
      - APP_URL=http://localhost:4321
    
    volumes:
      - ./api/src:/app/src
      - ./api/dist:/app/dist
      - ./api:/app/api
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - api_node_modules:/app/node_modules

    command: pnpm --filter api dev
    
    depends_on:
      postgres:
        condition: service_healthy
    
    restart: unless-stopped
  
  postgres:
    image: postgres:15-alpine

    environment:
      POSTGRES_DB: powerfin
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    
    ports:
      - "5432:5432"
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/db/init:/docker-entrypoint-initdb.d
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d powerfin"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
  api_node_modules:
